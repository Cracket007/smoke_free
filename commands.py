from datetime import datetime
from bot_config import bot, TIMEZONE
from message_handler import send_status
from telebot import types
from database import save_user, get_user, get_all_users
from scheduler import setup_schedules

# –í –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞ –¥–æ–±–∞–≤–∏–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
waiting_for_time = {}  # user_id -> future_date

def register_commands(bot):
    # –°–Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
    commands = [
        types.BotCommand("start", "–ù–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞"),
        types.BotCommand("status", "–£–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –≤—ã –Ω–µ –∫—É—Ä–∏—Ç–µ"),
        types.BotCommand("setdate", "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –æ—Ç–∫–∞–∑–∞"),
        types.BotCommand("settings", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"),
        types.BotCommand("help", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"),
    ]
    bot.set_my_commands(commands)

    @bot.message_handler(commands=['start'])
    def handle_start(message):
        user_id = str(message.from_user.id)
        chat_id = message.chat.id
        name = message.from_user.first_name
        
        user = get_user(user_id)
        if not user:
            save_user(user_id, name, chat_id)
            
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            status_button = types.KeyboardButton('–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?')
            keyboard.add(status_button)
            
            welcome_text = (
                "‚ú® –ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! üëã\n\n"
                "üìÖ –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å –¥–∞—Ç—ã –æ—Ç–∫–∞–∑–∞ –æ—Ç –∫—É—Ä–µ–Ω–∏—è:\n"
                "‚Ä¢ –§–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì–ì–ì\n"
                "‚Ä¢ –ü—Ä–∏–º–µ—Ä: 07.01.2025\n\n"
                "‚ùì –ò—Å–ø–æ–ª—å–∑—É–π /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"
            )
            
            bot.reply_to(message, welcome_text, reply_markup=keyboard)
        else:
            bot.reply_to(
                message, 
                "üåü –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!\nüí´ –ò—Å–ø–æ–ª—å–∑—É–π /help —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã"
            )

    @bot.message_handler(commands=['setdate'])
    def handle_setdate(message):
        try:
            user_id = str(message.from_user.id)
            user = get_user(user_id)
            if not user:
                bot.reply_to(message, "‚ùóÔ∏è –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /start")
                return
                
            date_str = message.text.replace('/setdate', '').strip()
            if not date_str:
                bot.reply_to(
                    message, 
                    "‚ùóÔ∏è –î–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏ –¥–∞—Ç—É –æ—Ç–∫–∞–∑–∞ –æ—Ç –∫—É—Ä–µ–Ω–∏—è\nüìÖ –ù–∞–ø—Ä–∏–º–µ—Ä: 19.01.2025"
                )
                return
                
            quit_date = datetime.strptime(date_str, "%d.%m.%Y")
            quit_date = quit_date.replace(hour=0, minute=0)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –±—É–¥—É—â–µ–º –ª–∏ –¥–∞—Ç–∞
            now = datetime.now(TIMEZONE)
            if quit_date > now:
                bot.reply_to(
                    message,
                    "‚ùóÔ∏è –î–∞—Ç–∞ –æ—Ç–∫–∞–∑–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º\n"
                    "üìÖ –£–∫–∞–∂–∏—Ç–µ —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –∏–ª–∏ –ø—Ä–æ—à–µ–¥—à—É—é –¥–∞—Ç—É"
                )
                return
            
            save_user(user_id, user['name'], user['chat_id'], 
                     quit_date.strftime("%Y-%m-%d %H:%M"))
                     
            bot.reply_to(
                message, 
                f"üéâ –û—Ç–ª–∏—á–Ω–æ! –î–∞—Ç–∞ –æ—Ç–∫–∞–∑–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {date_str}\n\n"
                "‚ú® –ß—Ç–æ –¥–∞–ª—å—à–µ:\n"
                "üí´ –ù–∞–∂–º–∏ '–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n"
                "‚ö°Ô∏è –ù–∞—Å—Ç—Ä–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–æ–π /settings"
            )
        except ValueError:
            bot.reply_to(
                message, 
                "‚ùóÔ∏è –£–ø—Å! –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã\n\n"
                "üìÖ –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì–ì–ì\n"
                "üí´ –ù–∞–ø—Ä–∏–º–µ—Ä: 19.01.2025"
            )

    @bot.message_handler(commands=['status'])
    def handle_status(message):
        user_id = str(message.from_user.id)
        user = get_user(user_id)
        if not user:
            bot.reply_to(message, "–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /start")
            return
            
        if not user.get('quit_date'):
            bot.reply_to(message, "–°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –æ—Ç–∫–∞–∑–∞ –æ—Ç –∫—É—Ä–µ–Ω–∏—è")
            return
            
        quit_time = datetime.strptime(user['quit_date'], "%Y-%m-%d %H:%M")
        send_status(user['chat_id'], quit_time)

    @bot.message_handler(commands=['settings'])
    def handle_settings(message):
        try:
            user_id = str(message.from_user.id)
            print(f"\nüîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
            user = get_user(user_id)
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                bot.reply_to(message, "‚ùóÔ∏è –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /start")
                return
            
            current_time = datetime.now(TIMEZONE)
            notify_time = user.get('notify_time')
            notifications_enabled = user.get('notifications_enabled', True)
            
            print(f"üì± –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
            print(f"‚è∞ –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notify_time}")
            print(f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {'–≤–∫–ª—é—á–µ–Ω—ã' if notifications_enabled else '–≤—ã–∫–ª—é—á–µ–Ω—ã'}")
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            times = ['09:00', '12:00', '15:00', '18:00', '21:00']
            time_buttons = [types.KeyboardButton(time) for time in times]
            on_button = types.KeyboardButton('üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
            off_button = types.KeyboardButton('üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
            back_button = types.KeyboardButton('–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?')
            
            markup.add(*time_buttons)
            markup.add(on_button, off_button)
            markup.add(back_button)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–ª–µ–¥—É—é—â–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
            next_notify_text = ""
            if notify_time and notifications_enabled:
                notify_hours, notify_minutes = map(int, notify_time.split(':'))
                notify_datetime = current_time.replace(hour=notify_hours, minute=notify_minutes)
                next_notify = "–∑–∞–≤—Ç—Ä–∞" if current_time > notify_datetime else "—Å–µ–≥–æ–¥–Ω—è"
                next_notify_text = f"\nüìÖ –°–ª–µ–¥—É—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {next_notify} –≤ {notify_time}"
            
            status = "–≤–∫–ª—é—á–µ–Ω—ã ‚úÖ" if notifications_enabled else "–≤—ã–∫–ª—é—á–µ–Ω—ã ‚ùå"
            time_status = f"‚è∞ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {notify_time if notify_time else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}"
            
            bot.reply_to(
                message,
                f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:\n\n"
                f"üîî –°—Ç–∞—Ç—É—Å: {status}\n"
                f"{time_status}"
                f"{next_notify_text}\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
                "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –≤—Ä–µ–º—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è\n"
                "‚Ä¢ –ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú\n"
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è",
                reply_markup=markup
            )
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö: {str(e)}")
            print(f"üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {type(e).__name__}")
            bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    @bot.message_handler(commands=['help'])
    def handle_help(message):
        help_text = (
            "‚ú® –ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n\n"
            "‚ñ´Ô∏è /start - –ù–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞\n"
            "‚ñ´Ô∏è /status - –£–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –≤—ã –Ω–µ –∫—É—Ä–∏—Ç–µ\n"
            "‚ñ´Ô∏è /setdate - –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –æ—Ç–∫–∞–∑–∞ (–î–î.–ú–ú.–ì–ì–ì–ì)\n"
            "‚ñ´Ô∏è /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
            "‚ñ´Ô∏è /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
            "üí´ –¢–∞–∫–∂–µ —Ç—ã –º–æ–∂–µ—à—å:\n"
            "üïí –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É '–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?'\n"
            "üìÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –¥–∞—Ç—É –æ—Ç–∫–∞–∑–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì\n"
            "‚è∞ –í—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n"
            "üí™ –í–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º –≤—Å–µ!"
        )
        bot.reply_to(message, help_text)

    @bot.message_handler(func=lambda message: True)
    def handle_text(message):
        try:
            user_id = str(message.from_user.id)
            user = get_user(user_id)
            
            if not user:
                bot.reply_to(message, "‚ùóÔ∏è –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /start")
                return
            
            text = message.text.strip()
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            if text == 'üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
                save_user(user_id, user['name'], user['chat_id'], 
                        user.get('quit_date'), '15:00', True)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                setup_schedules()  # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                status_button = types.KeyboardButton('–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?')
                keyboard.add(status_button)
                
                bot.reply_to(message, "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –Ω–∞ 15:00!\n–ò–∑–º–µ–Ω–∏—Ç–µ –≤—Ä–µ–º—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö /settings", reply_markup=keyboard)
                return
                
            if text == 'üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
                save_user(user_id, user['name'], user['chat_id'], 
                        user.get('quit_date'), None, False)  # –£–±–∏—Ä–∞–µ–º –≤—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                setup_schedules()  # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                status_button = types.KeyboardButton('–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?')
                keyboard.add(status_button)
                
                bot.reply_to(message, "‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã!", reply_markup=keyboard)
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ (–ß–ß:–ú–ú)
            if ':' in text and len(text) == 5:
                try:
                    hours, minutes = map(int, text.split(':'))
                    if 0 <= hours < 24 and 0 <= minutes < 60:
                        if user.get('quit_date'):
                            # –í–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è
                            save_user(user_id, user['name'], user['chat_id'],
                                    user.get('quit_date'), text, True)
                            setup_schedules()
                            
                            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                            status_button = types.KeyboardButton('–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?')
                            keyboard.add(status_button)
                            
                            bot.reply_to(
                                message, 
                                f"‚ú® –û—Ç–ª–∏—á–Ω–æ! –ë—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ {text}\n"
                                "üí™ –í–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å!",
                                reply_markup=keyboard
                            )
                        else:
                            bot.reply_to(
                                message,
                                "‚ùóÔ∏è –°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –æ—Ç–∫–∞–∑–∞ –æ—Ç –∫—É—Ä–µ–Ω–∏—è"
                            )
                        return
                except ValueError:
                    pass
            
            if text == '–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?' or text == '/status':
                if not user.get('quit_date'):
                    bot.reply_to(message, "‚ùóÔ∏è –°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –æ—Ç–∫–∞–∑–∞ –æ—Ç –∫—É—Ä–µ–Ω–∏—è")
                    return
                quit_time = datetime.strptime(user['quit_date'], "%Y-%m-%d %H:%M")
                send_status(user['chat_id'], quit_time)
                return
            
            try:
                quit_date = datetime.strptime(text, "%d.%m.%Y")
                quit_date = quit_date.replace(hour=0, minute=0)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –±—É–¥—É—â–µ–º –ª–∏ –¥–∞—Ç–∞
                now = datetime.now(TIMEZONE)
                quit_date = TIMEZONE.localize(quit_date)  # –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∫ –¥–∞—Ç–µ –æ—Ç–∫–∞–∑–∞
                if quit_date > now:
                    bot.reply_to(
                        message,
                        "‚ùå –ù–µ–ª—å–∑—è —É–∫–∞–∑–∞—Ç—å –±—É–¥—É—â—É—é –¥–∞—Ç—É.\n"
                        "üìÖ –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –≤—ã —É–∂–µ –±—Ä–æ—Å–∏–ª–∏ –∫—É—Ä–∏—Ç—å"
                    )
                    return
                
                save_user(user_id, user['name'], user['chat_id'], 
                         quit_date.strftime("%Y-%m-%d %H:%M"))
                bot.reply_to(
                    message, 
                    f"üéâ –û—Ç–ª–∏—á–Ω–æ! –î–∞—Ç–∞ –æ—Ç–∫–∞–∑–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {text}\n\n"
                    "‚ú® –ß—Ç–æ –¥–∞–ª—å—à–µ:\n"
                    "üí´ –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?' –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /status —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
                    "‚ö°Ô∏è –ù–∞—Å—Ç—Ä–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–æ–π /settings —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n\n"
                    "üí™ –¢—ã –¥–µ–ª–∞–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä!"
                )
                
            except ValueError:
                bot.reply_to(
                    message, 
                    "üåü –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å.\n\n"
                    "‚ú® –ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
                    "üéØ –ü–æ–∫–∞–∑—ã–≤–∞—é —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
                    "‚è∞ –û—Ç–ø—Ä–∞–≤–ª—è—é –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
                    "üé§ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏\n\n"
                    "üì± –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n"
                    "üí´ –ù–∞–∂–º–∏ '–°–∫–æ–ª—å–∫–æ —è –Ω–µ –∫—É—Ä—é?' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n"
                    "üìÖ –û—Ç–ø—Ä–∞–≤—å –¥–∞—Ç—É –æ—Ç–∫–∞–∑–∞ (–î–î.–ú–ú.–ì–ì–ì–ì)\n"
                    "‚ö°Ô∏è /settings - –Ω–∞—Å—Ç—Ä–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
                    "‚ùì /help - –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã"
                )
            
            if user_id in waiting_for_time:
                # –ï—Å–ª–∏ –≤—Ä–µ–º—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ, –Ω–æ –º—ã –∂–¥–∞–ª–∏ –≤—Ä–µ–º—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                bot.reply_to(
                    message,
                    "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏!\n\n"
                    "‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú\n"
                    "‚Ä¢ –ß–∞—Å—ã: –æ—Ç 00 –¥–æ 23\n"
                    "‚Ä¢ –ú–∏–Ω—É—Ç—ã: –æ—Ç 00 –¥–æ 59\n\n"
                    "üí´ –ù–∞–ø—Ä–∏–º–µ—Ä: 10:30 –∏–ª–∏ 20:00"
                )
                return
            
        except Exception as e:
            bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}") 