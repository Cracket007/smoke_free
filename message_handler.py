import os
from datetime import datetime
from pydub import AudioSegment
from bot_config import bot, audio_files, voice_motivation_phrases, get_text_motivation, get_voice_motivation, TIMEZONE
import tempfile
import random
import pytz

def calculate_smoke_free_time(quit_time):
    """–í—ã—á–∏—Å–ª—è–µ—Ç –≤—Ä–µ–º—è –±–µ–∑ –∫—É—Ä–µ–Ω–∏—è"""
    now = datetime.now(TIMEZONE)
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ—Ç–∫–∞–∑–∞ –≤ –∫–∏–µ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –µ—Å–ª–∏ –æ–Ω–æ –±–µ–∑ –∑–æ–Ω—ã
    if quit_time.tzinfo is None:
        quit_time = TIMEZONE.localize(quit_time)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –±—É–¥—É—â–µ–º –ª–∏ –¥–∞—Ç–∞
    if quit_time > now:
        return 0, 0, 0  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω—É–ª–∏ –µ—Å–ª–∏ –¥–∞—Ç–∞ –≤ –±—É–¥—É—â–µ–º
    
    delta = now - quit_time
    total_months = delta.days // 30
    years = total_months // 12
    months = total_months % 12
    days = delta.days % 30
    return years, months, days

def get_word_form(number, forms):
    if number % 10 == 1 and number % 100 != 11:
        return "singular"
    elif 2 <= number % 10 <= 4 and not (12 <= number % 100 <= 14):
        return "few"
    else:
        return "plural"

def get_number_files(number):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è —á–∏—Å–ª–∞"""
    files = []
    
    if number <= 20:
        # –î–ª—è —á–∏—Å–µ–ª –¥–æ 20 –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        files.append(audio_files["numbers"][str(number)])
    else:
        # –î–ª—è —á–∏—Å–µ–ª –±–æ–ª—å—à–µ 20
        tens = (number // 10) * 10
        ones = number % 10
        
        if tens == 20:
            files.append(audio_files["twenty"])
        elif tens == 30:
            files.append(audio_files["thirty"])
            
        if ones > 0:
            files.append(audio_files["numbers"][str(ones)])
    
    return files

def generate_voice_message(years, months, days):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è"""
    message_files = [audio_files["intro"]]
    parts = []
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if years > 0:
        year_files = get_number_files(years)
        year_form = get_word_form(years, audio_files["year_forms"])
        parts.append(year_files + [audio_files["year_forms"][year_form]])
        
    if months > 0:
        month_files = get_number_files(months)
        month_form = get_word_form(months, audio_files["month_forms"])
        parts.append(month_files + [audio_files["month_forms"][month_form]])
        
    if days > 0:
        day_files = get_number_files(days)
        day_form = get_word_form(days, audio_files["day_forms"])
        parts.append(day_files + [audio_files["day_forms"][day_form]])
    
    # –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å "–∏" —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–π —á–∞—Å—Ç—å—é
    for i, part in enumerate(parts):
        if i == len(parts) - 1 and i > 0:  # –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —á–∞—Å—Ç—å –∏ –Ω–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è
            message_files.append(audio_files["and"])
        message_files.extend(part)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∏—Ä—É—é—â—É—é —Ñ—Ä–∞–∑—É
    motivation_text, motivation_key = get_voice_motivation()
    message_files.append(audio_files["motivation"][motivation_key])
    
    return message_files

def combine_audio_files(files):
    """–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –≤ –æ–¥–∏–Ω"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª
        combined = AudioSegment.from_ogg(files[0])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
        for file in files[1:]:
            audio = AudioSegment.from_ogg(file)
            combined += audio
            
        return combined  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º AudioSegment –æ–±—ä–µ–∫—Ç
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ –∞—É–¥–∏–æ: {e}")
        raise

def format_duration(duration):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    days = duration.days
    hours = duration.seconds // 3600
    minutes = (duration.seconds % 3600) // 60
    
    parts = []
    if days > 0:
        parts.append(f"{days} {'–¥–µ–Ω—å' if days == 1 else '–¥–Ω—è' if 1 < days < 5 else '–¥–Ω–µ–π'}")
    if hours > 0:
        parts.append(f"{hours} {'—á–∞—Å' if hours == 1 else '—á–∞—Å–∞' if 1 < hours < 5 else '—á–∞—Å–æ–≤'}")
    if minutes > 0:
        parts.append(f"{minutes} {'–º–∏–Ω—É—Ç—É' if minutes == 1 else '–º–∏–Ω—É—Ç—ã' if 1 < minutes < 5 else '–º–∏–Ω—É—Ç'}")
    
    return " –∏ ".join(parts) if parts else "–º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã"

def send_status(chat_id, quit_time):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å—Ç–∞—Ç—É—Å"""
    try:
        years, months, days = calculate_smoke_free_time(quit_time)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –±—É–¥—É—â–µ–º –ª–∏ –¥–∞—Ç–∞
        if years == months == days == 0:
            bot.send_message(chat_id, "‚ùóÔ∏è –î–∞—Ç–∞ –æ—Ç–∫–∞–∑–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º")
            return
            
        text_parts = []
        if years > 0:
            text_parts.append(f"{years} {'–≥–æ–¥' if years == 1 else '–≥–æ–¥–∞' if 1 < years < 5 else '–ª–µ—Ç'}")
        if months > 0:
            text_parts.append(f"{months} {'–º–µ—Å—è—Ü' if months == 1 else '–º–µ—Å—è—Ü–∞' if 1 < months < 5 else '–º–µ—Å—è—Ü–µ–≤'}")
        if days > 0:
            text_parts.append(f"{days} {'–¥–µ–Ω—å' if days == 1 else '–¥–Ω—è' if 1 < days < 5 else '–¥–Ω–µ–π'}")
        
        text_message = (
            f"üåü –¢–≤–æ–π –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤—å—é:\n\n"
            f"‚ú® –£–∂–µ {' '.join(text_parts)} —Å–≤–æ–±–æ–¥—ã –æ—Ç –∫—É—Ä–µ–Ω–∏—è!\n\n"
            f"{get_text_motivation()}"
        )
        bot.send_message(chat_id, text_message)
        
        send_voice_status(chat_id, quit_time)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")

def send_voice_status(chat_id, quit_time):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ"""
    try:
        if not os.path.exists('audio'):
            print("‚ùå –ü–∞–ø–∫–∞ audio –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
            
        years, months, days = calculate_smoke_free_time(quit_time)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        message_files = generate_voice_message(years, months, days)
        
        # –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã
        combined = combine_audio_files(message_files)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        combined = combined.set_channels(1)  # –º–æ–Ω–æ
        combined = combined.set_frame_rate(48000)  # 48–∫–ì—Ü
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(suffix='.ogg', delete=False) as temp_file:
            # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            combined.export(
                temp_file.name,
                format='ogg',
                codec='libopus',
                parameters=[
                    '-ac', '1',      # –º–æ–Ω–æ
                    '-ar', '48000',  # —á–∞—Å—Ç–æ—Ç–∞ 48–∫–ì—Ü
                    '-b:a', '128k'   # –±–∏—Ç—Ä–µ–π—Ç 128–∫–±–∏—Ç/—Å
                ]
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
            with open(temp_file.name, 'rb') as audio:
                bot.send_voice(chat_id, audio)
                
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.unlink(temp_file.name)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}") 