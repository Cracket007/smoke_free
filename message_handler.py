import os
from datetime import datetime
from pydub import AudioSegment
from bot_config import bot, audio_files, motivation_phrases, motivation_mapping, get_motivational_message, TIMEZONE
import tempfile
import random
import pytz

def calculate_smoke_free_time(quit_time):
    """–í—ã—á–∏—Å–ª—è–µ—Ç –≤—Ä–µ–º—è –±–µ–∑ –∫—É—Ä–µ–Ω–∏—è"""
    now = datetime.now(TIMEZONE)
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ—Ç–∫–∞–∑–∞ –≤ –∫–∏–µ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –µ—Å–ª–∏ –æ–Ω–æ –±–µ–∑ –∑–æ–Ω—ã
    if quit_time.tzinfo is None:
        quit_time = TIMEZONE.localize(quit_time)
    
    delta = now - quit_time
    total_months = delta.days // 30
    years = total_months // 12
    months = total_months % 12
    days = delta.days % 30
    return years, months, days

def get_word_form(number, forms):
    if number % 10 == 1 and number % 100 != 11:
        return "singular"
    elif 2 <= number % 10 <= 4 and not (12 <= number % 100 <= 14):
        return "few"
    else:
        return "plural"

def get_number_files(number):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–∑–≤—É—á–∫–∏ —á–∏—Å–ª–∞"""
    if number <= 20:
        return [audio_files["numbers"][str(number)]]
    elif number == 30:
        return [audio_files["thirty"]]
    else:  # 21-29
        return [audio_files["twenty"], audio_files["numbers"][str(number - 20)]]

def generate_voice_message(years, months, days):
    message_files = [audio_files["intro"]]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ–¥—ã
    if years > 0:
        message_files.extend(get_number_files(years))
        form = get_word_form(years, audio_files["year_forms"])
        message_files.append(audio_files["year_forms"][form])

    # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Å—è—Ü—ã
    if months > 0:
        if years > 0:
            message_files.append(audio_files["and"])
        message_files.extend(get_number_files(months))
        form = get_word_form(months, audio_files["month_forms"])
        message_files.append(audio_files["month_forms"][form])

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–Ω–∏
    if days > 0:
        if years > 0 or months > 0:
            message_files.append(audio_files["and"])
        message_files.extend(get_number_files(days))
        form = get_word_form(days, audio_files["day_forms"])
        message_files.append(audio_files["day_forms"][form])

    # –î–æ–±–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∏—Ä—É—é—â—É—é —Ñ—Ä–∞–∑—É
    motivation_text = random.choice(motivation_phrases)
    motivation_key = motivation_mapping[motivation_text]
    message_files.append(audio_files["motivation"][motivation_key])

    return message_files, motivation_text  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–∞–∫–∂–µ —Ç–µ–∫—Å—Ç —Ñ—Ä–∞–∑—ã

def combine_audio_files(files):
    """–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    try:
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã
        combined = AudioSegment.empty()
        for file in files:
            audio = AudioSegment.from_ogg(file)
            combined += audio
            
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: –º–æ–Ω–æ, —á–∞—Å—Ç–æ—Ç–∞ 48–∫–ì—Ü, –±–∏—Ç—Ä–µ–π—Ç 128–∫–±–∏—Ç/—Å
        combined = combined.set_channels(1)
        combined = combined.set_frame_rate(48000)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(delete=False, suffix='.ogg') as temp_file:
            # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            combined.export(
                temp_file.name,
                format='ogg',
                codec='libopus',
                parameters=[
                    '-ac', '1',  # –º–æ–Ω–æ
                    '-ar', '48000',  # —á–∞—Å—Ç–æ—Ç–∞ 48–∫–ì—Ü
                    '-b:a', '128k'  # –±–∏—Ç—Ä–µ–π—Ç 128–∫–±–∏—Ç/—Å
                ]
            )
            return temp_file.name
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ: {e}")
        raise

def format_duration(duration):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    days = duration.days
    hours = duration.seconds // 3600
    minutes = (duration.seconds % 3600) // 60
    
    parts = []
    if days > 0:
        parts.append(f"{days} {'–¥–µ–Ω—å' if days == 1 else '–¥–Ω—è' if 1 < days < 5 else '–¥–Ω–µ–π'}")
    if hours > 0:
        parts.append(f"{hours} {'—á–∞—Å' if hours == 1 else '—á–∞—Å–∞' if 1 < hours < 5 else '—á–∞—Å–æ–≤'}")
    if minutes > 0:
        parts.append(f"{minutes} {'–º–∏–Ω—É—Ç—É' if minutes == 1 else '–º–∏–Ω—É—Ç—ã' if 1 < minutes < 5 else '–º–∏–Ω—É—Ç'}")
    
    return " –∏ ".join(parts) if parts else "–º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã"

def send_status(chat_id, quit_time):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ –≤—Ä–µ–º–µ–Ω–∏ –±–µ–∑ –∫—É—Ä–µ–Ω–∏—è"""
    try:
        if not os.path.exists('audio'):
            print("‚ùå –û—à–∏–±–∫–∞: –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è audio –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ—Ç–∫–∞–∑–∞ –≤ –∫–∏–µ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –µ—Å–ª–∏ –æ–Ω–æ –±–µ–∑ –∑–æ–Ω—ã
        if quit_time.tzinfo is None:
            quit_time = TIMEZONE.localize(quit_time)

        years, months, days = calculate_smoke_free_time(quit_time)
        voice_files, motivation = generate_voice_message(years, months, days)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
        for file in voice_files:
            if not os.path.exists(file):
                print(f"‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª {file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
        
        try:
            combined_file = combine_audio_files(voice_files)
            
            with open(combined_file, 'rb') as audio:
                bot.send_voice(chat_id, audio)
            
            os.unlink(combined_file)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å –≥–æ–¥–∞–º–∏, –º–µ—Å—è—Ü–∞–º–∏ –∏ –¥–Ω—è–º–∏
            text_parts = []
            if years > 0:
                text_parts.append(f"{years} {'–≥–æ–¥' if years == 1 else '–≥–æ–¥–∞' if 1 < years < 5 else '–ª–µ—Ç'}")
            if months > 0:
                text_parts.append(f"{months} {'–º–µ—Å—è—Ü' if months == 1 else '–º–µ—Å—è—Ü–∞' if 1 < months < 5 else '–º–µ—Å—è—Ü–µ–≤'}")
            if days > 0:
                text_parts.append(f"{days} {'–¥–µ–Ω—å' if days == 1 else '–¥–Ω—è' if 1 < days < 5 else '–¥–Ω–µ–π'}")
            
            text_message = f"üí™ –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å:\n\nüåü {' '.join(text_parts)} –±–µ–∑ –∫—É—Ä–µ–Ω–∏—è!\n\nüéØ –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!"
            bot.send_message(chat_id, text_message)
            
        except Exception as audio_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ: {audio_error}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        bot.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –≤—Ä–µ–º–µ–Ω–∏")

def send_voice_status(chat_id, quit_time):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –æ –≤—Ä–µ–º–µ–Ω–∏ –±–µ–∑ –∫—É—Ä–µ–Ω–∏—è"""
    try:
        if not os.path.exists('audio'):
            print("‚ùå –û—à–∏–±–∫–∞: –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è audio –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        years, months, days = calculate_smoke_free_time(quit_time)
        voice_files = []  # –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ
        voice_files.append(audio_files['intro'])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ–¥—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
        if years > 0:
            voice_files.extend(get_number_files(years))
            voice_files.append(audio_files['year_forms'][get_word_form(years, 'year')])
            if months > 0 or days > 0:
                voice_files.append(audio_files['and'])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Å—è—Ü—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
        if months > 0:
            voice_files.extend(get_number_files(months))
            voice_files.append(audio_files['month_forms'][get_word_form(months, 'month')])
            if days > 0:
                voice_files.append(audio_files['and'])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–Ω–∏
        if days > 0:
            voice_files.extend(get_number_files(days))
            voice_files.append(audio_files['day_forms'][get_word_form(days, 'day')])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É
        motivation = random.choice(list(audio_files['motivation'].values()))
        voice_files.append(motivation)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
        for file in voice_files:
            if not os.path.exists(file):
                print(f"‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª {file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
        
        try:
            combined_file = combine_audio_files(voice_files)
            with open(combined_file, 'rb') as audio:
                bot.send_voice(chat_id, audio)
            os.unlink(combined_file)
            
        except Exception as audio_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ: {audio_error}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞: {e}") 